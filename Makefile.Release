#############################################################################
# Makefile for building: Modeler
# Generated by qmake (2.01a) (Qt 4.3.2) on: ?? ???. 7 16:16:22 2008
# Project:  Modeler.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_SHARED -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I/usr/X11R6/include -Itmp -Itmp
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -L/usr/lib -lglut -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = tmp/

####### Files

SOURCES       = glwidget3d.cpp \
		main.cpp \
		mgrid.cpp \
		mmodel.cpp \
		mobject.cpp \
		modeler.cpp \
		mpoints.cpp \
		newgrid.cpp \
		treemodel.cpp \
		renderer.cpp \
		glrenderer3d.cpp \
		camera.cpp \
		mprogressbartracker.cpp \
		mabstractview.cpp \
		mview3d.cpp \
		treeitem.cpp \
		mfolder.cpp \
		mmodelproperty.cpp \
		mwell.cpp tmp/moc_glwidget3d.cpp \
		tmp/moc_modeler.cpp \
		tmp/moc_newgrid.cpp \
		tmp/moc_treemodel.cpp \
		tmp/qrc_modeler.cpp
OBJECTS       = tmp/glwidget3d.o \
		tmp/main.o \
		tmp/mgrid.o \
		tmp/mmodel.o \
		tmp/mobject.o \
		tmp/modeler.o \
		tmp/mpoints.o \
		tmp/newgrid.o \
		tmp/treemodel.o \
		tmp/renderer.o \
		tmp/glrenderer3d.o \
		tmp/camera.o \
		tmp/mprogressbartracker.o \
		tmp/mabstractview.o \
		tmp/mview3d.o \
		tmp/treeitem.o \
		tmp/mfolder.o \
		tmp/mmodelproperty.o \
		tmp/mwell.o \
		tmp/moc_glwidget3d.o \
		tmp/moc_modeler.o \
		tmp/moc_newgrid.o \
		tmp/moc_treemodel.o \
		tmp/qrc_modeler.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		Modeler.pro
QMAKE_TARGET  = Modeler
DESTDIR       = 
TARGET        = Modeler

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release $(TARGET)

$(TARGET): tmp/ui_modeler.h tmp/ui_newgrid.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) -unix -o Makefile.Release Modeler.pro

dist: 
	@$(CHK_DIR_EXISTS) tmp/Modeler1.0.0 || $(MKDIR) tmp/Modeler1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) tmp/Modeler1.0.0/ && $(COPY_FILE) --parents glwidget3d.h mgrid.h mmodel.h mobject.h modeler.h mpoint.h mpoints.h mrgb.h newgrid.h globals.h treemodel.h renderer.h glrenderer3d.h camera.h mprogressbartracker.h mabstractview.h mview3d.h treeitem.h borderstruct.h mfolder.h mmodelproperty.h mwell.h tmp/Modeler1.0.0/ && $(COPY_FILE) --parents modeler.qrc tmp/Modeler1.0.0/ && $(COPY_FILE) --parents glwidget3d.cpp main.cpp mgrid.cpp mmodel.cpp mobject.cpp modeler.cpp mpoints.cpp newgrid.cpp treemodel.cpp renderer.cpp glrenderer3d.cpp camera.cpp mprogressbartracker.cpp mabstractview.cpp mview3d.cpp treeitem.cpp mfolder.cpp mmodelproperty.cpp mwell.cpp tmp/Modeler1.0.0/ && $(COPY_FILE) --parents modeler.ui newgrid.ui tmp/Modeler1.0.0/ && (cd `dirname tmp/Modeler1.0.0` && $(TAR) Modeler1.0.0.tar Modeler1.0.0 && $(COMPRESS) Modeler1.0.0.tar) && $(MOVE) `dirname tmp/Modeler1.0.0`/Modeler1.0.0.tar.gz . && $(DEL_FILE) -r tmp/Modeler1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Release


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: tmp/moc_glwidget3d.cpp tmp/moc_modeler.cpp tmp/moc_newgrid.cpp tmp/moc_treemodel.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) tmp/moc_glwidget3d.cpp tmp/moc_modeler.cpp tmp/moc_newgrid.cpp tmp/moc_treemodel.cpp
tmp/moc_glwidget3d.cpp: camera.h \
		borderstruct.h \
		glwidget3d.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) glwidget3d.h -o tmp/moc_glwidget3d.cpp

tmp/moc_modeler.cpp: tmp/ui_modeler.h \
		modeler.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) modeler.h -o tmp/moc_modeler.cpp

tmp/moc_newgrid.cpp: mgrid.h \
		mobject.h \
		treeitem.h \
		mpoint.h \
		tmp/ui_newgrid.h \
		newgrid.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) newgrid.h -o tmp/moc_newgrid.cpp

tmp/moc_treemodel.cpp: borderstruct.h \
		treemodel.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) treemodel.h -o tmp/moc_treemodel.cpp

compiler_rcc_make_all: tmp/qrc_modeler.cpp
compiler_rcc_clean:
	-$(DEL_FILE) tmp/qrc_modeler.cpp
tmp/qrc_modeler.cpp: modeler.qrc
	/usr/bin/rcc -name modeler modeler.qrc -o tmp/qrc_modeler.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: tmp/ui_modeler.h tmp/ui_newgrid.h
compiler_uic_clean:
	-$(DEL_FILE) tmp/ui_modeler.h tmp/ui_newgrid.h
tmp/ui_modeler.h: modeler.ui
	/usr/bin/uic-qt4 modeler.ui -o tmp/ui_modeler.h

tmp/ui_newgrid.h: newgrid.ui
	/usr/bin/uic-qt4 newgrid.ui -o tmp/ui_newgrid.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

tmp/glwidget3d.o: glwidget3d.cpp glwidget3d.h \
		camera.h \
		borderstruct.h \
		mobject.h \
		treeitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/glwidget3d.o glwidget3d.cpp

tmp/main.o: main.cpp modeler.h \
		tmp/ui_modeler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/main.o main.cpp

tmp/mgrid.o: mgrid.cpp mgrid.h \
		mobject.h \
		treeitem.h \
		mpoint.h \
		mrgb.h \
		renderer.h \
		mprogressbartracker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mgrid.o mgrid.cpp

tmp/mmodel.o: mmodel.cpp mgrid.h \
		mobject.h \
		treeitem.h \
		mpoint.h \
		mmodel.h \
		mfolder.h \
		renderer.h \
		mmodelproperty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mmodel.o mmodel.cpp

tmp/mobject.o: mobject.cpp mobject.h \
		treeitem.h \
		borderstruct.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mobject.o mobject.cpp

tmp/modeler.o: modeler.cpp treemodel.h \
		borderstruct.h \
		modeler.h \
		tmp/ui_modeler.h \
		newgrid.h \
		mgrid.h \
		mobject.h \
		treeitem.h \
		mpoint.h \
		tmp/ui_newgrid.h \
		glwidget3d.h \
		camera.h \
		mmodel.h \
		mfolder.h \
		mprogressbartracker.h \
		mview3d.h \
		mabstractview.h \
		mwell.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/modeler.o modeler.cpp

tmp/mpoints.o: mpoints.cpp mpoints.h \
		mobject.h \
		treeitem.h \
		mpoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mpoints.o mpoints.cpp

tmp/newgrid.o: newgrid.cpp newgrid.h \
		mgrid.h \
		mobject.h \
		treeitem.h \
		mpoint.h \
		tmp/ui_newgrid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/newgrid.o newgrid.cpp

tmp/treemodel.o: treemodel.cpp treemodel.h \
		borderstruct.h \
		treeitem.h \
		glwidget3d.h \
		camera.h \
		mfolder.h \
		mobject.h \
		renderer.h \
		mabstractview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/treemodel.o treemodel.cpp

tmp/renderer.o: renderer.cpp renderer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/renderer.o renderer.cpp

tmp/glrenderer3d.o: glrenderer3d.cpp glrenderer3d.h \
		renderer.h \
		mgrid.h \
		mobject.h \
		treeitem.h \
		mpoint.h \
		mwell.h \
		mmodel.h \
		mfolder.h \
		mmodelproperty.h \
		mrgb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/glrenderer3d.o glrenderer3d.cpp

tmp/camera.o: camera.cpp camera.h \
		borderstruct.h \
		mobject.h \
		treeitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/camera.o camera.cpp

tmp/mprogressbartracker.o: mprogressbartracker.cpp mprogressbartracker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mprogressbartracker.o mprogressbartracker.cpp

tmp/mabstractview.o: mabstractview.cpp mabstractview.h \
		treemodel.h \
		borderstruct.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mabstractview.o mabstractview.cpp

tmp/mview3d.o: mview3d.cpp mview3d.h \
		mabstractview.h \
		borderstruct.h \
		glrenderer3d.h \
		renderer.h \
		glwidget3d.h \
		camera.h \
		treemodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mview3d.o mview3d.cpp

tmp/treeitem.o: treeitem.cpp treeitem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/treeitem.o treeitem.cpp

tmp/mfolder.o: mfolder.cpp mfolder.h \
		mobject.h \
		treeitem.h \
		borderstruct.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mfolder.o mfolder.cpp

tmp/mmodelproperty.o: mmodelproperty.cpp mmodelproperty.h \
		mmodel.h \
		mfolder.h \
		mobject.h \
		treeitem.h \
		renderer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mmodelproperty.o mmodelproperty.cpp

tmp/mwell.o: mwell.cpp mwell.h \
		mobject.h \
		treeitem.h \
		renderer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/mwell.o mwell.cpp

tmp/moc_glwidget3d.o: tmp/moc_glwidget3d.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_glwidget3d.o tmp/moc_glwidget3d.cpp

tmp/moc_modeler.o: tmp/moc_modeler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_modeler.o tmp/moc_modeler.cpp

tmp/moc_newgrid.o: tmp/moc_newgrid.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_newgrid.o tmp/moc_newgrid.cpp

tmp/moc_treemodel.o: tmp/moc_treemodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_treemodel.o tmp/moc_treemodel.cpp

tmp/qrc_modeler.o: tmp/qrc_modeler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/qrc_modeler.o tmp/qrc_modeler.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

